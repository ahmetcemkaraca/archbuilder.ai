name: Auto Format

on:
  push:
    branches: [ main, develop, 'feature/*' ]
    paths:
      - '**.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'

jobs:
  format:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install black==24.8.0 isort==5.13.2

      - name: Format Python code
        run: |
          # Format all Python files
          python -m black . --line-length=88
          python -m isort . --profile=black --line-length=88

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action - Auto Format"
          git add -A
          git commit -m "style: auto-format Python code with black and isort

          - Applied black formatting with line-length=88
          - Applied isort import sorting with black profile
          - Automated formatting to maintain code consistency

          [skip ci]"
          git push

      - name: Comment on PR
        if: steps.verify-changed-files.outputs.changed == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ¤– **Auto-formatting applied!**\n\nPython code has been automatically formatted with `black` and `isort` to maintain consistency.\n\nâœ… All files now comply with project code style standards.'
            })

  validate:
    runs-on: ubuntu-latest
    needs: format
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black==24.8.0 isort==5.13.2 flake8==7.1.1

      - name: Validate formatting
        run: |
          # Check if code is properly formatted
          python -m black --check --diff .
          python -m isort --check-only --diff . --profile=black

      - name: Run linting
        run: |
          python -m flake8 src/cloud-server/app --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Validation success
        run: |
          echo "âœ… All Python code is properly formatted and passes linting checks!"
