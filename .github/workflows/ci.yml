name: CI

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Linux build (primary)
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies (cloud-server)
        run: |
          python -m pip install --upgrade pip
          pip install -r src/cloud-server/requirements.txt

      - name: Lint Python code
        run: |
          cd src/cloud-server
          python -m black --check --diff .
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Validate imports and syntax
        run: |
          pip check
          find src/cloud-server -name "*.py" -exec python -m py_compile {} \;

      - name: Run basic tests
        run: |
          cd src/cloud-server
          python -m pytest tests/ -v --tb=short || echo "Tests not yet implemented"

  # Windows build (compatibility check)
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies (cloud-server)
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install -r src/cloud-server/requirements.txt

      - name: Validate registry (if scripts exist)
        shell: powershell
        run: |
          if (Test-Path "scripts/validate-registry.ps1") {
            pwsh -File scripts/validate-registry.ps1
          } else {
            Write-Output "Registry validation script not found - skipping"
          }

      - name: Import/Deps checks
        shell: powershell
        run: |
          pip check
          Get-ChildItem -Path src/cloud-server -Recurse -Filter *.py | ForEach-Object { 
            try { 
              python -m py_compile $_.FullName 
            } catch { 
              Write-Warning "Failed to compile: $($_.FullName)" 
            }
          }

